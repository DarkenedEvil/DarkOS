os.pullEvent = os.pullEventRaw
_G.shell = shell

function rawread(returnprog, username, CPass)
	print("Press any key to return.")
    bRead = true
    while(bRead) do
        local sEvent, param = os.pullEvent("key")
        if(sEvent == "key") then
            shell.run(returnprog, username)
        end
    end
end

function usercreate(username, password, level, returnName, CPass)--Creates User
	local hashPass = StrUtils.SHA1(password)
	local hashUser = username
	local hashLevel = StrUtils.SHA1(level)
	local userfile = ("/users/"..hashUser)
	if userfile ~= "/users/" then
		if fs.exists(userfile) then
			print("Sorry that username is already taken!")
			sleep(1.5)
			shell.run("/sys/admin", returnName)
		else
			local fileopen = fs.open(userfile,"w") 
			local passwrite = {pass = hashPass, user = hashUser, settings = hashLevel, clocktime = false} 
			fileopen.write(textutils.serialize(passwrite))
			fileopen.close() 
			print("User made!") 
			sleep(1.5)
			shell.run("/sys/admin", returnName, CPass)
		end
	else
		print("Please enter a username ")
		sleep(1.5)
		shell.run("/sys/admin", returnName, hashPass)
	end
end

local tArgs = {...}
if #tArgs < 2 then
	error("Expected Username but got less. Please report this to DarkenedEvil.")
	rawread("admin", tArgs[1], CPass)
end
if #tArgs > 2 then
	error("Expected Username but got more! Please report this to DarkenedEvil")
	rawread("admin", tArgs[1], CPass)
end

returnName = tArgs[1]
CPass = tArgs[2]

function printcentred(text)
	local maxw, maxh = term.getSize() 
	local curx, cury = term.getCursorPos()
	term.setCursorPos((maxw-#text)/2,cury)
	term.write(text)
	term.setCursorPos(curx,cury+1)
end
function screen()
	local maxw, maxh = term.getSize()
	term.setBackgroundColor(colors.lightBlue)
	term.clear()
	term.setCursorPos(1,1)
	term.setBackgroundColor(colors.blue)
	print("<----Go Back")
	term.setBackgroundColor(colors.lightBlue)
	term.setCursorPos(1,3)
	printcentred("What would you like to do with users?")
	printcentred(" ")
	printcentred(" ")
	term.setBackgroundColor(colors.blue)
	printcentred("  Lookup users   ")
	term.setBackgroundColor(colors.lightBlue)
	printcentred(" ")
	printcentred(" ")
	term.setBackgroundColor(colors.blue)
	printcentred("  Delete a user  ")
	term.setBackgroundColor(colors.lightBlue)
	printcentred(" ")
	printcentred(" ")
	term.setBackgroundColor(colors.blue)
	printcentred("  Create a user  ")
	term.setBackgroundColor(colors.lightBlue)
	term.setBackgroundColor(colors.lightBlue)
end
screen()
while true do
	local event, button, x, y = os.pullEvent()
	if event == "mouse_click" then
		if x >= 17 and x <= 33 and y == 6 and button == 1 then --lookup users
			term.setBackgroundColor(colors.lightBlue)
			term.clear()
			term.setCursorPos(1,1)
			term.setBackgroundColor(colors.blue)
			print("<----Go Back")
			term.setBackgroundColor(colors.lightBlue)
			term.setCursorPos(1,3)
			local FileList = fs.list("/users/")
			textutils.tabulate(FileList)
			while true do
				local event, button, x, y = os.pullEvent()
				if event == "mouse_click" then
					if x >= 1 and x <= 12 and y == 1 and button == 1 then
						screen()
						break
					end
				end
			end
		elseif x >= 1 and x <= 12 and y == 1 and button == 1 then
			shell.run("/sys/admin", returnName, password)
		elseif x >= 17 and x <= 33 and y == 9 and button == 1 then--Delete a User
			function drawScreen()
				term.setBackgroundColor(colors.lightBlue)
				term.clear()
				term.setCursorPos(1,1)
				term.setBackgroundColor(colors.blue)
				print("<----Go Back")
				term.setBackgroundColor(colors.lightBlue)
				local maxw, maxh = term.getSize()
				term.setCursorPos(1,math.floor(maxh/2))
				printcentred("Enter the Username and Password of the user.")
				printcentred("             ")
				printcentred("Username:")
				term.setBackgroundColor(colors.lightGray)
				printcentred("              ")
				term.setBackgroundColor(colors.lightBlue)
				printcentred("Password:")
				term.setBackgroundColor(colors.lightGray)
				printcentred("              ")
				term.setBackgroundColor(colors.lightBlue)
				printcentred("             ")
				printcentred("[Delete]")
			end
		
			function drawAlert(text)
				term.setBackgroundColor(colors.red)
				local maxw, maxh = term.getSize()
				term.setCursorPos(1,math.floor(maxh/2))
				printcentred(text)
				term.setBackgroundColor(colors.lightBlue)
			end	
		
			function drawUserBox()
				term.setCursorPos(1, 12)
				term.setBackgroundColor(colors.lightBlue)
				term.clearLine()
				term.setCursorPos(18, 12)
				term.setBackgroundColor(colors.lightGray)
				printcentred("              ")
			end
			
			function drawPassBox()
				term.setCursorPos(18, 14)
				term.setBackgroundColor(colors.lightGray)
				printcentred("              ")
			end
			drawScreen()
			while true do
				local event, key = os.pullEvent()
				if key == keys.tab then
					if tabs == "password" then
						drawPassBox()
						term.setBackgroundColor(colors.lightGray)
						term.setCursorPos(18, 14)
						password = read("*")
						tabs = "username"
						term.setBackgroundColor(colors.lightBlue)
					end
				end	
				local event, button, x, y = os.pullEvent()
				if event == "mouse_click" then
					if x >= 18 and x <= 31 and y == 12 and button == 1 then --username
						drawUserBox()
						term.setBackgroundColor(colors.lightGray)
						term.setCursorPos(18, 12)
						username1 = read()
						tabs = "password"
						tUser = true
						term.setBackgroundColor(colors.lightBlue)
					elseif x >= 18 and x <= 31 and y == 14 and button == 1 then --password
						drawPassBox()
						term.setBackgroundColor(colors.lightGray)
						term.setCursorPos(18, 14)
						password = read("*")
						tPass = true
						term.setBackgroundColor(colors.lightBlue)
					elseif x >= 21 and x <= 28 and y == 16 and button == 1 then--delete
						if username1 ~= nil or ""--[[ and password ~= nil or ""--]] then
							local hashPass = StrUtils.SHA1(password)
							local userfile = ("/users/"..username1)
							if fs.exists(userfile) then
								local pass = fs.open(userfile, "r")
								local dataS = pass.readAll() 
								local data = textutils.unserialize(dataS) 
								local readpassword = data.pass
								local readusername = data.user
								pass.close()
								os.sleep(2)
								if returnName == readusername then
									print("You can't delete your own user silly!")
									sleep(1.5)
								else
									if readpassword == hashPass and username1 == readusername then
										while true do
											term.clear()
											term.setCursorPos(1,1)
											print("Are you sure you want to delete the user?")
											print("[Y] or [N]")
											local event, param = os.pullEvent("char")
											if param == "y" then
												fs.delete(userfile)
												print("File deleted!")
												sleep(1.5)
												print("Press any key to return.")
												bRead = true
												while(bRead) do
													local sEvent, param = os.pullEvent("key")
													if(sEvent == "key") then
														os.run({}, "/sys/admin", tArgs[1])
													end
												end
											elseif param == "n" then
												os.run({}, "/sys/usercontrol", returnName)
											else
												print("Please choose [Y] or [N].")
												sleep(1.5)           
											end
										end
									else
										print("Incorrect password or username!")
										sleep(1.5)
									end
								end
							else
								print("That user doesn't exist!")
								sleep(1.5)
							end
						else
							print("Please enter a username or password!")
							sleep(1.5)
							drawScreen()
						end
					elseif x >= 1 and x <= 12 and y == 1 and button == 1 then
						screen()
						break
					end
				end
				--[[if key == keys.enter then --If the enter button is pressed, attempt to delete
					if username == nil or password == nil then
						print("Please enter a username or password!")
						sleep(1.5)
						drawScreen()
					else
						local hashPass = StrUtils.SHA1(password)
						local userfile = ("/users/"..username)
						if fs.exists(userfile) then
							local pass = fs.open(userfile, "r")
							local dataS = pass.read() 
							local data = textutils.unserialize(dataS)
							print("1")
							local readusername = data.user
							local readpassword = data.pass
							print("2")
							pass.close()
							if returnName == readusername then
								print("You can't delete your own user silly!")
								sleep(1.5)
							else
								if readpassword == hashPass and username == readusername then
									while true do
										term.clear()
										term.setCursorPos(1,1)
										print("Are you sure you want to delete the user?")
										print("[Y] or [N]")
										local event, param = os.pullEvent("char")
										if param == "y" then
											fs.delete(userfile)
											print("File deleted!")
											sleep(1.5)
											print("Press any key to return.")
											bRead = true
											while(bRead) do
												local sEvent, param = os.pullEvent("key")
												if(sEvent == "key") then
													os.run({}, "/sys/admin", tArgs[1])
												end
											end
										elseif param == "n" then
											os.run({}, "/sys/usercontrol", returnName)
										else
											print("Please choose [Y] or [N].")
											sleep(1.5)           
										end
									end
								else
									print("Incorrect password or username!")
									sleep(1.5)
								end
							end
						else
							print("That user doesn't exist!")
							sleep(1.5)
						end
					end
				end--]]
			end
		elseif x >= 17 and x <= 33 and y == 12 and button == 1 then --Create User
			function drawScreen()
				term.setBackgroundColor(colors.lightBlue)
				term.clear()
				term.setCursorPos(1,1)
				term.setBackgroundColor(colors.blue)
				print("<----Go Back")
				term.setBackgroundColor(colors.lightBlue)
				local maxw, maxh = term.getSize()
				term.setCursorPos(1,math.floor(maxh/2))
				printcentred("Enter the Username and Password of the user.")
				printcentred("             ")
				printcentred("Username:")
				term.setBackgroundColor(colors.lightGray)
				printcentred("              ")
				term.setBackgroundColor(colors.lightBlue)
				printcentred("Password:")
				term.setBackgroundColor(colors.lightGray)
				printcentred("              ")
				term.setBackgroundColor(colors.lightBlue)
				printcentred("Confirm Password")
				term.setBackgroundColor(colors.lightGray)
				printcentred("              ")
				term.setBackgroundColor(colors.lightBlue)
				printcentred("              ")
				printcentred("[Create]")
			end
				
			function drawSetting()
				term.setBackgroundColor(colors.lightBlue)
				term.clear()
				term.setCursorPos(1,1)
				term.setBackgroundColor(colors.blue)
				print("<----Go Back")
				term.setBackgroundColor(colors.lightBlue)
				term.setBackgroundColor(colors.lightBlue)
				local maxw, maxh = term.getSize()
				term.setCursorPos(1,math.floor(maxh/2))
				printcentred("User Level")
				printcentred(" ")
				
				
			end
			drawScreen()
			
			term.setBackgroundColor(colors.lightGray)
			term.setCursorPos(18, 12)
			username = read()
			tabs = "password"
			function drawUsername()
				term.setCursorPos(1, 12)
				term.setBackgroundColor(colors.lightBlue)
				term.clearLine()
				term.setCursorPos(18, 12)
				term.setBackgroundColor(colors.lightGray)
				printcentred("              ")
			end
			
			function drawPassword()
				term.setCursorPos(1, 14)
				term.setBackgroundColor(colors.lightBlue)
				term.clearLine()
				term.setCursorPos(18, 14)
				term.setBackgroundColor(colors.lightGray)
				printcentred("              ")
			end
			
			function drawPasswordConfirm()
				term.setCursorPos(1, 16)
				term.setBackgroundColor(colors.lightBlue)
				term.clearLine()
				term.setCursorPos(18, 16)
				term.setBackgroundColor(colors.lightGray)
				printcentred("              ")
			end
			while true do
				local event, key = os.pullEvent()
				if key == keys.tab then
					if tabs == "password" then
						drawPassword()
						term.setBackgroundColor(colors.lightGray)
						term.setCursorPos(18, 14)
						password = read("*")
						tabs = "passCheck"
						term.setBackgroundColor(colors.lightBlue)
					elseif tabs == "passCheck" then
						drawPasswordConfirm()
						term.setBackgroundColor(colors.lightGray)
						term.setCursorPos(18, 16)
						passCheck = read("*")
						tabs = "username"
						term.setBackgroundColor(colors.lightBlue)
					elseif tabs == "username" then
						drawUsername()
						term.setBackgroundColor(colors.lightGray)
						term.setCursorPos(18, 12)
						username = read()
						tabs = "password"
						term.setBackgroundColor(colors.lightBlue)
					end
				elseif key == keys.enter then
					if passCheck == password then
						usercreate(username, password, "admin", returnName, CPass)
					else
						print("Passwords didn't match!")
						sleep(1.5)
					end
				end
				local event, button, x, y = os.pullEvent()
				--drawScreen()
				if event == "mouse_click" then
					if x >= 1 and x <= 12 and y == 1 and button == 1 then
						screen()
						break
					elseif x >= 18 and x <= 31 and y == 12 and button == 1 then  --username
						drawUsername()
						term.setBackgroundColor(colors.lightGray)
						term.setCursorPos(18, 12)
						username = read()
						term.setBackgroundColor(colors.lightBlue)
						tabs = "password"					
					elseif x >= 18 and x <= 31 and y == 14 and button == 1 then  --password
						drawPassword()
						term.setBackgroundColor(colors.lightGray)
						term.setCursorPos(18, 14)
						password = read("*")
						tabs = "passCheck"
						term.setBackgroundColor(colors.lightBlue)
					elseif x >= 18 and x <= 31 and y == 16 and button == 1 then  --confirm-password
						drawPasswordConfirm()
						term.setBackgroundColor(colors.lightGray)
						term.setCursorPos(18, 16)
						passCheck = read("*")
						term.setBackgroundColor(colors.lightBlue)
						tabs = "username"
					elseif x >= 21 and x <= 28 and y == 18 and button == 1 then  --create
						if passCheck == password then
							usercreate(username, password, "admin", returnName, CPass)
						else
							print("Passwords didn't match!")
							sleep(1.5)
						end
					end
				end
			end
		end
	end
end
rawread("admin", tArgs[1], CPass)